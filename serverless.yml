org: bmatias
app: tennis-trainer
service: amber-framework

plugins:
  - serverless-offline

provider:
  profile: tennis-dev
  name: aws
  runtime: nodejs8.10
  memorySize: 2048
  versionFunctions: false
  environment: ${file(env.yml):${self:custom.stage}}
  timeout: 30
  region: ap-southeast-1
  vpc:
    securityGroupIds:
      - ${file(env.yml):${self:custom.stage}.VPC_SECURITY_GROUP}
    subnetIds:
      - ${file(env.yml):${self:custom.stage}.VPC_SUBNET_1}
      - ${file(env.yml):${self:custom.stage}.VPC_SUBNET_2}


custom:
  stage: ${opt:stage, self:provider.stage}

functions:
  app:
    handler: src/app.serverless
    events:
      - s3:
        bucket: tennis-trainer-s3-bucket
        event: s3:ObjectCreated:*
        rules:
          - prefix: uploads/
        existing: true
      - http:
          path: /{proxy+}
          method: any
          cors: true
          # authorizer: arn:aws:cognito-idp:${file(env.yml):${self:custom.stage}.REGION}:${file(env.yml):${self:custom.stage}.AWS_ACCOUNT}:userpool/us-east-1_zmiG3QHTn
      - http:
          path: /api/users
          method: GET
          # authorizer: arn:aws:cognito-idp:${file(env.yml):${self:custom.stage}.REGION}:${file(env.yml):${self:custom.stage}.AWS_ACCOUNT}:userpool/us-east-1_zmiG3QHTn
# resources:
#   Resources:
#     tennisTrainerS3Bucket:
#         Type: AWS::S3::Bucket
#         Properties:
#           BucketName: ${file(env.yml):${self:custom.stage}.AWS_S3_BUCKET}
#           AccessControl: BucketOwnerFullControl
#           CorsConfiguration:
#             CorsRules:
#             - AllowedMethods:
#               - GET
#               - PUT
#               - POST
#               - HEAD
#               AllowedOrigins:
#               - "*"
#               AllowedHeaders:
#               - "*"