{
  "openapi": "3.0.0",
  "info": {
    "title": "Tennis Trainer API Endpoints",
    "version": "v1"
  },
  "servers": [
    {
      "description": "Dev server",
      "url": "/dev/api"
    },
    {
      "description": "Local server",
      "url": "/api"
    },
    {
      "summary": "Auth Token",
      "description": "Auth Server",
      "url": "https://t6q9vl4ui9.execute-api.us-east-1.amazonaws.com/dev"
    }
  ],
  "paths": {
    "/auth/accesstoken": {
      "get": {
        "summary": "Auth Token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "sendVerificationCode",
        "tags": [
          {
            "name": "Auth",
            "description": " -- Don't forget to change the server URL at the top"
          }
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "value": "d793af55-e569-41ea-a82f-8313026e7526",
            "description": " client id for access token",
            "required": true
          },
          {
            "name": "clientSecret",
            "in": "query",
            "value": "YpkoqVXw/6zd7YKE1M9/nmwtzG7SquRDwKOxkU8pIW8=",
            "description": "client secret for access token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Verification code successfully sent"
          }
        }
      }
    },
    "/users/list": {
      "get": {
        "summary": "List all Users",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "ListUsers",
        "tags": [ "Users" ],
        "responses": {
          "200": {
            "description": "List of all users",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 200,
                    "data": [
                      {
                        "id": 2019131640,
                        "name": "Benjamin Matias",
                        "email": "bmatias@stratpoint.com",
                        "userType": "admin",
                        "googleUserId": "20190917",
                        "fbUserId": "20191024",
                        "subscribed": true,
                        "createdAt": "2019-10-18T01:53:12.970Z",
                        "updatedAt": "2019-10-24T09:06:35.680Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/signin": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "CreateUser",
        "tags": [ "Users" ],
        "requestBody": {
          "description": "Sign in",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "userType": {
                    "type": "string"
                  },
                  "googleUserId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "fbUserId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "subscribed": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sign in",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "varchar"
                    },
                    "userType": {
                      "type": "string"
                    },
                    "googleUserId": {
                      "type": "integer"
                    },
                    "subscribed": {
                      "type": "boolean",
                      "defaultValue": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Successful Signin",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "400": {
          "description": "User not created because of validation error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/defaultResponses/ValidationError"
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "ShowUser",
        "tags": [ "Users" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to show",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Return user with given id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/NotFoundError"
                }
              }
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "UpdateUser",
        "tags": [ "Users" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the user to update subscription",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody": {
          "description": "Update Subscription",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "subscribed": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "subscribed": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/NotFoundError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "DeleteUser",
        "tags": [ "Users" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "202": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/NotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/videos/{userId}/video": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "ListVideo",
        "tags": [ "Videos" ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "id of the user to show video from",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all videos of specific userId",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "CreateVideo",
        "tags": [ "Videos" ],
        "requestBody": {
          "description": "Video data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "400": {
            "description": "Project not created because of validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/videos/analytics": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "ListAnalytics",
        "tags": [ "Videos" ],
        "parameters": [
          {
            "name": "videoId",
            "in": "query",
            "description": "id of the video to search",
            "required": true
          },
          {
            "name": "set",
            "in": "query",
            "description": "set of the match",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of all clips",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "User created successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "400": {
          "description": "User not created because of validation error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/defaultResponses/ValidationError"
              }
            }
          }
        }
      }
    },
    "/videos/getSignedURL": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "GetSignedURL",
        "tags": [ "Videos" ],
        "requestBody": {
          "description": "Generate Signed URL",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "userId": {
                    "type": "integer",
                    "required": true
                  },
                  "fileType": {
                    "type": "string",
                    "required": true
                  },
                  "opponent": {
                    "type": "string"
                  },
                  "matchType": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string",
                    "required": true
                  },
                  "type": {
                    "type": "string"
                  },
                  "tournament": {
                    "type": "string"
                  },
                  "matchResult": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "required": true
                  },
                  "time": {
                    "type": "string",
                    "required": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Signed URL",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clips": {
      "get": {
        "summary": "List all clips per videoId",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "ListClips",
        "tags": [ "Clips" ],
        "responses": {
          "200": {
            "description": "List of all clips",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "User created successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "400": {
          "description": "User not created because of validation error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/defaultResponses/ValidationError"
              }
            }
          }
        }
      }
    },
    "/clips/{videoId}/clip": {
      "post": {
        "summary": "Create Clip",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "CreateClip",
        "tags": [ "Clips" ],
        "responses": {
          "200": {
            "description": "Clip created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "User created successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "400": {
          "description": "User not created because of validation error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/defaultResponses/ValidationError"
              }
            }
          }
        }
      }
    },
    "/clips/update/{id}": {
      "put": {
        "summary": "Update data of a clip",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "UpdateClip",
        "tags": [ "Clips" ],
        "responses": {
          "200": {
            "description": "Clip updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Updated successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "400": {
          "description": "User not created because of validation error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/defaultResponses/ValidationError"
              }
            }
          }
        }
      }
    },
    "/clips/delete/{id}": {
      "get": {
        "summary": "Delete a clip",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "DeleteClip",
        "tags": [ "Clips" ],
        "responses": {
          "200": {
            "description": "Clip Deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "User created successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "400": {
          "description": "User not created because of validation error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/defaultResponses/ValidationError"
              }
            }
          }
        }
      }
    },
    "/clips/video/details/filter": {
      "get": {
        "summary": "Filter clips",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "GetFilter",
        "tags": [ "Clips" ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "User created successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "400": {
          "description": "User not created because of validation error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/defaultResponses/ValidationError"
              }
            }
          }
        }
      }
    },
    "/clips/countfilter": {
      "get": {
        "summary": "Filter clips and count value occurences and percentage",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "ListFilteredClips",
        "tags": [ "Clips" ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "User created successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "400": {
          "description": "User not created because of validation error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/defaultResponses/ValidationError"
              }
            }
          }
        }
      }
    },
    "/clips/keypoint/list": {
      "get": {
        "summary": "List all keypoints",
        "operationId": "ListKeypoints",
        "tags": [ "Keypoints" ],
        "responses": {
          "200": {
            "description": "List all keypoints",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "User created successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "400": {
          "description": "User not created because of validation error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/defaultResponses/ValidationError"
              }
            }
          }
        }
      }
    },
    "/clips/keypoint": {
      "get": {
        "summary": "Get path where keypoint is uploaded",
        "operationId": "GetKeypoint",
        "tags": [ "Keypoints" ],
        "responses": {
          "200": {
            "description": "Retrieve successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Generate signed URL for keypoints",
        "operationId": "KeypointSignedURL",
        "tags": [ "Keypoints" ],
        "responses": {
          "200": {
            "description": "Retrieve successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "User created successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "400": {
          "description": "User not created because of validation error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/defaultResponses/ValidationError"
              }
            }
          }
        }
      }
    }
  },
  "defaultResponses": {
    "ValidationError": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [ "ValidationError" ]
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/defaultResponses/ValidationErrorDetail"
          }
        }
      }
    },
    "ValidationErrorDetail": {
      "properties": {
        "message": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "NotFoundError": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [ "NotFoundError" ]
        },
        "details": {
          "type": "string",
          "enum": [ "User with id {id} not found" ]
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "in": "header",
        "description": "idToken from login"
      }
    },
    "schemas": {
      "User": {
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique Identifier representing a user",
            "x-primary-key": true
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Project": {
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique Identifier representing a project",
            "x-primary-key": true
          },
          "name": {
            "type": "string"
          }
        }
      }
    }
  }
}
