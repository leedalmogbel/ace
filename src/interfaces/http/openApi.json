{
  "openapi": "3.0.0",
  "info": {
    "title": "Tennis Trainer API Endpoints",
    "version": "v1"
  },
  "servers": [
    {
      "description": "Dev server",
      "url": "/dev/api"
    },
    {
      "description": "Local server",
      "url": "/api"
    },
    {
      "summary": "Auth Token",
      "description": "Auth Server",
      "url": "https://t6q9vl4ui9.execute-api.us-east-1.amazonaws.com/dev"
    }
  ],
  "paths": {
    "/auth/accesstoken": {
      "get": {
        "summary": "Auth Token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "sendVerificationCode",
        "tags": [
          {
            "name": "Auth",
            "description": " -- Don't forget to change the server URL at the top"
          }
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "value": "d793af55-e569-41ea-a82f-8313026e7526",
            "description": " client id for access token",
            "required": true
          },
          {
            "name": "clientSecret",
            "in": "query",
            "value": "YpkoqVXw/6zd7YKE1M9/nmwtzG7SquRDwKOxkU8pIW8=",
            "description": "client secret for access token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Verification code successfully sent"
          }
        }
      }
    },
    "/users/list": {
      "get": {
        "summary": "List all Users",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "ListUsers",
        "tags": [ "Users" ],
        "responses": {
          "200": {
            "description": "List of all users",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 200,
                    "data": [
                      {
                        "id": 2019131640,
                        "name": "Benjamin Matias",
                        "email": "bmatias@stratpoint.com",
                        "userType": "admin",
                        "googleUserId": "20190917",
                        "fbUserId": "20191024",
                        "subscribed": true,
                        "createdAt": "2019-10-18T01:53:12.970Z",
                        "updatedAt": "2019-10-24T09:06:35.680Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/signin": {
      "post": {
        "summary": "Sign in users",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "Login",
        "tags": [ "Users" ],
        "requestBody": {
          "description": "Sign in",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "required": true
                  },
                  "email": {
                    "type": "string",
                    "required": true
                  },
                  "googleUserId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "fbUserId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "subscribed": {
                    "type": "boolean"
                  }
                },
                "example": {
                  "name": "Benjamin Matias",
                  "email": "bmatias@stratpoint.com",
                  "googleUserId": "",
                  "fbUserId": ""
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sign in",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "userType": {
                      "type": "string"
                    },
                    "googleUserId": {
                      "type": "integer"
                    },
                    "subscribed": {
                      "type": "boolean",
                      "defaultValue": false
                    }
                  },
                  "example": {
                    "statusCode": 200,
                    "data": {
                      "id": 2019131640,
                      "name": "Benjamin Matias",
                      "email": "bmatias@stratpoint.com",
                      "userType": "admin",
                      "googleUserId": "20190917",
                      "subscribed": true,
                      "createdAt": "2019-10-18T01:53:12.970Z",
                      "updatedAt": "2019-10-25T01:12:20.956Z",
                      "fbUserId": "20191024"
                    },
                    "message": {
                      "status": "Successful Signin"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User not created because of validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/whitelist": {
      "post": {
        "summary": "Add new whitelisted email",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "CreateWhitelist",
        "tags": [ "Users" ],
        "requestBody": {
          "description": "Add new whitelist user",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string",
                    "required": true
                  }
                },
                "example": {
                  "email": "kboquiren@stratpoint.com"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Add new whitelisted email.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "email": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "data": {
                      "id": 1,
                      "email": "kboquiren@stratpoint.com"
                    },
                    "message": {
                      "status": "Successfully added to whitelisted emails."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User not created because of validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "Create new user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "CreateUser",
        "tags": [ "Users" ],
        "requestBody": {
          "description": "Create new user",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "required": true
                  },
                  "email": {
                    "type": "string",
                    "required": true
                  },
                  "userType": {
                    "type": "string",
                    "required": true
                  },
                  "googleUserId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "fbUserId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "subscribed": {
                    "type": "boolean"
                  }
                },
                "example": {
                  "name": "Benjamin Matias",
                  "email": "bmatias@stratpoint.com",
                  "userType": "admin",
                  "googleUserId": "0123456789",
                  "fbUserId": "0123456789"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create new user.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "userType": {
                      "type": "string"
                    },
                    "googleUserId": {
                      "type": "integer"
                    },
                    "subscribed": {
                      "type": "boolean",
                      "defaultValue": false
                    }
                  },
                  "example": {
                    "statusCode": 200,
                    "data": {
                      "id": 2019131640,
                      "name": "Benjamin Matias",
                      "email": "bmatias@stratpoint.com",
                      "userType": "admin",
                      "googleUserId": "20190917",
                      "subscribed": true,
                      "fbUserId": "20191024"
                    },
                    "message": {
                      "status": "Successfully created."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User not created because of validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Show profile of a User",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "ShowUser",
        "tags": [ "Users" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to show",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Return user with given id",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 200,
                      "data": {
                        "id": 2019131640,
                        "name": "Benjamin Matias",
                        "email": "bmatias@stratpoint.com",
                        "userType": "admin",
                        "googleUserId": "20190917",
                        "fbUserId": "20191024",
                        "subscribed": true,
                        "createdAt": "2019-10-18T01:53:12.970Z",
                        "updatedAt": "2019-10-25T01:25:07.237Z"
                      }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/NotFoundError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update subscription of the user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "UpdateUser",
        "tags": [ "Users" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the user to update subscription",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody": {
          "description": "Update Subscription",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "subscribed": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Update subscription",
            "content": {
              "application/json": {
                "schema": {
                  "subscribed": {
                    "type": "boolean"
                  },
                  "example": {
                    "statusCode": 200,
                    "data": {
                      "id": 2019131640,
                      "name": "Benjamin Matias",
                      "email": "bmatias@stratpoint.com",
                      "userType": "admin",
                      "googleUserId": "20190917",
                      "fbUserId": "20191024",
                      "subscribed": true,
                      "createdAt": "2019-10-18T01:53:12.970Z",
                      "updatedAt": "2019-10-25T01:35:59.322Z"
                    },
                    "message": "Subscription Updated"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/NotFoundError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary":"Delete user account",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "DeleteUser",
        "tags": [ "Users" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "202": {
            "description": "Delete user"
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/NotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/videos/{userId}/video": {
      "get": {
        "summary": "List all videos per userId",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "ListVideo",
        "tags": [ "Videos" ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "id of the user to show video from",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all videos of specific userId",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 200,
                    "data": [
                      {
                        "id": 1,
                        "videoName": "Danville_10172019_17:54",
                        "path": "https://tennis-trainer-dev-media.s3.ap-southeast-1.amazonaws.com/videos/local/2019-10-18/2019629601/Danville_10172019_17:54.mp4"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "NOT IN USE",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "CreateVideo",
        "tags": [ "Videos" ],
        "requestBody": {
          "description": "Video data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "400": {
            "description": "Project not created because of validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/videos/analytics": {
      "get": {
        "summary": "Filter clips, accepts video id and set only",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "ListAnalytics",
        "tags": [ "Videos" ],
        "parameters": [
          {
            "name": "videoId",
            "in": "query",
            "description": "id of the video to search",
            "required": true
          },
          {
            "name": "set",
            "in": "query",
            "description": "set of the match",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of all clips",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 200,
                    "data": {
                      "videoName": "Danville_10172019_17:54",
                      "clips": [
                        {
                          "set": 3,
                          "game": 2,
                          "shotType": "forehand",
                          "hitSpot": "behind baseline",
                          "shotResult": "winner",
                          "smartPattern": true,
                          "extra": "hit ball early",
                          "errorType": "NA",
                          "spin": "NA",
                          "shotDirection": "NA",
                          "speed": "NA"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/videos/getSignedURL": {
      "get": {
        "summary": "Signed URL for uploading videos in S3",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "GetSignedURL",
        "tags": [ "Videos" ],
        "requestBody": {
          "description": "Generate Signed URL",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "userId": {
                    "type": "integer",
                    "required": true
                  },
                  "fileType": {
                    "type": "string",
                    "required": true
                  },
                  "opponent": {
                    "type": "string"
                  },
                  "matchType": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string",
                    "required": true
                  },
                  "type": {
                    "type": "string"
                  },
                  "tournament": {
                    "type": "string"
                  },
                  "matchResult": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "required": true
                  },
                  "time": {
                    "type": "string",
                    "required": true
                  }
                },
                "example": {
                  "userId": 2019131640,
                  "fileType":"mp4",
                  "opponent": "Opponent 1",
                  "matchType": "match",
                  "location": "Manila",
                  "type": "best of 3",
                  "tournament": "French Open",
                  "matchResult": "won",
                  "date": "10172019",
                  "time": "17:54"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Signed URL",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "signedUrl": "https://tennis-trainer-dev-media.s3.ap-southeast-1.amazonaws.com/videos/local/2019-10-25/2019131640/Manila_10172019_17%3A54.mp4?Content-Type=video%2Fmp4&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIA23UKCIVOYDB2PXO6%2F20191025%2Fap-southeast-1%2Fs3%2Faws4_request&X-Amz-Date=20191025T041357Z&X-Amz-Expires=604800&X-Amz-Signature=c6aa4ff6be6153e15b07ee6c1e15dc385793818b049dc4a2c880e5f87e210f61&X-Amz-SignedHeaders=host%3Bx-amz-acl&x-amz-acl=public-read-write",
                    "videoData": [
                        {
                            "videoId": 8,
                            "userId": 2019131640,
                            "videoName": "Manila_10172019_17:54",
                            "path": "https://tennis-trainer-dev-media.s3.ap-southeast-1.amazonaws.com/videos/local/2019-10-25/2019131640/Manila_10172019_17:54.mp4",
                            "opponent": "Opponent 1",
                            "matchType": "match",
                            "type": "best of 3",
                            "tournament": "French Open",
                            "result": "won",
                            "location": "Manila",
                            "date": "10172019",
                            "time": "17:54"
                        }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clips": {
      "get": {
        "summary": "List all clips per videoId",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "ListClips",
        "tags": [ "Clips" ],"parameters": [
          {
            "name": "videoId",
            "in": "query",
            "description": "Id of video to filter",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all clips",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "User created successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "400": {
          "description": "User not created because of validation error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/defaultResponses/ValidationError"
              }
            }
          }
        }
      }
    },
    "/clips/{videoId}/clip": {
      "post": {
        "summary": "Create Clip",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "CreateClip",
        "tags": [ "Clips" ],
        "parameters": [
          {
            "name": "videoId",
            "in": "path",
            "description": "Id of selected video",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody": {
          "description": "Create clip from selected video",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                 
                },
                "example": {
                  "videoId": 3,
                  "clipName": "Clip Test name",
                  "set": 3,
                  "game": 2,
                  "startTime": "94",
                  "endTime": "102",
                  "currentSetScore": "5-4",
                  "currentGameScore": "40-15",
                  "oppositeSetScore": "5-4",
                  "oppositeGameScore": "40-15",
                  "shotType": "backhand",
                  "shotDirection": "cross-court",
                  "hitSpot": "behind baseline",
                  "moveDirection": "body shot",
                  "shotResult": "winner",
                  "smartPattern": "true",
                  "extra": "hit ball early",
                  "errorType": "NA",
                  "spin": "NA",
                  "speed": "NA",
                  "comment":"",
                  "winner": "no",
                  "errorLocation":"wide",
                  "move" : "return",
                  "rallyLength":"1-4",
                  "clipType" : "forGoldStandard"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Clip created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "User created successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "400": {
          "description": "User not created because of validation error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/defaultResponses/ValidationError"
              }
            }
          }
        }
      }
    },
    "/clips/update/{id}": {
      "put": {
        "summary": "Update data of a clip",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "UpdateClip",
        "tags": [ "Clips" ],
        "responses": {
          "200": {
            "description": "Clip updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Updated successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "400": {
          "description": "User not created because of validation error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/defaultResponses/ValidationError"
              }
            }
          }
        }
      }
    },
    "/clips/delete/{id}": {
      "get": {
        "summary": "Delete a clip",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "DeleteClip",
        "tags": [ "Clips" ],
        "responses": {
          "200": {
            "description": "Clip Deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "User created successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "400": {
          "description": "User not created because of validation error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/defaultResponses/ValidationError"
              }
            }
          }
        }
      }
    },
    "/clips/video/details/filter": {
      "get": {
        "summary": "Filter clips",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "GetFilter",
        "tags": [ "Clips" ],
        "parameters": [
          {
            "name": "videoId",
            "in": "query",
            "description": "Id of video to filter",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "set",
            "in": "query",
            "description": "set number of the match",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "game",
            "in": "query",
            "description": "game number of the set",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "shotType",
            "in": "query",
            "description": "shot type of the player",
            "required": false,
            "type": "string",
            "enum": [
              "forehand",
              "backhand",
              "volley",
              "overhead"
            ]
          },
          {
            "name": "hitSpot",
            "in": "query",
            "description": "hitting spot of the player",
            "required": false,
            "type": "string"
          },
          {
            "name": "shotResult",
            "in": "query",
            "description": "point result of the player",
            "required": false,
            "type": "string"
          },
          {
            "name": "errorType",
            "in": "query",
            "description": "error type of the shot",
            "required": false,
            "type": "string"
          },
          {
            "name": "shotDirection",
            "in": "query",
            "description": "direction of the shot",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 200,
                    "data": [
                      {
                        "videoName": "Danville_10172019_17:54",
                        "matchType": "match",
                        "location": "Danville",
                        "ClipModels": [
                          {
                            "id": 3,
                            "videoId": 1,
                            "clipName": "Danville_10172019_17:54-from:00:01:34_to:00:01:42",
                            "set": 3,
                            "game": 2,
                            "startTime": "94",
                            "endTime": "102",
                            "currentSetScore": "5-4",
                            "currentGameScore": "40-15",
                            "shotType": "forehand",
                            "moveDirection": "body shot",
                            "hitSpot": "behind baseline",
                            "shotResult": "winner",
                            "smartPattern": true,
                            "extra": "hit ball early",
                            "errorType": "NA",
                            "spin": "NA",
                            "shotDirection": "NA",
                            "speed": "NA",
                            "comments": null
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "User created successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "400": {
          "description": "User not created because of validation error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/defaultResponses/ValidationError"
              }
            }
          }
        }
      }
    },
    "/clips/countfilter": {
      "get": {
        "summary": "Filter clips and count value occurences and percentage",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "ListFilteredClips",
        "tags": [ "Clips" ],
        "parameters": [
          {
            "name": "videoId",
            "in": "query",
            "description": "Id of video to filter",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "set",
            "in": "query",
            "description": "set number of the match",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "User created successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "400": {
          "description": "User not created because of validation error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/defaultResponses/ValidationError"
              }
            }
          }
        }
      }
    },
    "/clips/{id}/detectedPerson": {
      "post": {
        "summary": "Save detected person images from AI",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "CreateDetectedPerson",
        "tags": [ "Clips" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of selected clip",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody": {
          "description": "Save multiple detected persons from AI",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "personImages": {
                    "type": "array",
                    "required": true
                  }
                },
                "example": {
                  "personImages": [
                    {
                      "clipId": 1,
                      "image": "image binary base64",
                      "centroid": "(0.3434, 0.4324)"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return array of persons image",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List of detected person images from AI",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "ListDetectedPerson",
        "tags": [ "Clips" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of selected clip",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Return array of persons image",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clips/{clipId}/detectedPerson/{id}/setKeypoints": {
      "post": {
        "summary": "Select detected person for keypoints and mp4 generation.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "SetDetectedPersonKeypoints",
        "tags": [ "Clips" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of selected person",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "clipId",
            "in": "path",
            "description": "Id of selected clip",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody": {
          "description": "Set gold scenario and user",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "scenarioId": {
                    "type": "integer",
                    "required": true
                  },
                  "userId": {
                    "type": "integer",
                    "required": true
                  }
                },
                "example": {
                  "scenarioId": 1,
                  "userId": 2019131640
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clips/{clipId}/detectedPerson/{id}/generateKeypointsSignedUrl": {
      "post": {
        "summary": "Generate signedURL for selected Persons generated keypoints.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "GenerateKeypointsSignedUrl",
        "tags": [ "Clips" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of selected person",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "clipId",
            "in": "path",
            "description": "Id of selected clip",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody": {
          "description": "Id of personKeypoint",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "personKeypointId": {
                    "type": "integer",
                    "required": true
                  }
                },
                "example": {
                  "personKeypointId": 4
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clips/{clipId}/detectedPerson/{id}/generateVideoSignedUrl": {
      "post": {
        "summary": "Generate signedURL for selected Persons generated skeleton mp4.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "GenerateVideoSignedUrl",
        "tags": [ "Clips" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of selected person",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "clipId",
            "in": "path",
            "description": "Id of selected clip",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody": {
          "description": "Id of personKeypoint",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "personKeypointId": {
                    "type": "integer",
                    "required": true
                  }
                },
                "example": {
                  "personKeypointId": 4
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/scenarios/{id}/generateModelSignedUrl": {
      "post": {
        "summary": "Generate signedURL for generated model.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "GenerateModelSignedUrl",
        "tags": [ "Scenarios" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of gold scenario",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody": {
          "description": "Id of user",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "userId": {
                    "type": "integer",
                    "required": true
                  }
                },
                "example": {
                  "userId": 2019838809
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clips/{clipId}/detectedPerson/{id}/generateScore": {
      "post": {
        "summary": "Generate scores based on selected model and detectedPerson keypoints.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "SelectClipForScore",
        "tags": [ "Clips" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of selected person",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "clipId",
            "in": "path",
            "description": "Id of selected clip",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody": {
          "description": "Selected model Id",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "scenarioId": {
                    "type": "integer",
                    "required": true
                  }
                },
                "example": {
                  "scenarioId": 1
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clips/{clipId}/detectedPerson/{id}/scores": {
      "get": {
        "summary": "List detected person scores",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "SelectClipForScore",
        "tags": [ "Clips" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of selected person",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "clipId",
            "in": "path",
            "description": "Id of selected clip",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Save generated scores from AI",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "CreateScore",
        "tags": [ "Clips" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of selected person",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "clipId",
            "in": "path",
            "description": "Id of selected clip",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody": {
          "description": "Set clip as gold standard",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "score": {
                    "type": "array",
                    "required": true
                  }
                },
                "example": {
                  "score" : [
                    {
                      "keypointMap" : "all",
                      "score" : 0.3456789
                    },
                    {
                      "keypointMap" : "balance",
                      "score" : 0.3456789
                    },
                    {
                      "keypointMap" : "movement",
                      "score" : 0.3456789
                    },
                    {
                      "keypointMap" : "ball_striking",
                      "score" : 0.3456789
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/models": {
      "get": {
        "summary": "List all Models",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "ListModels",
        "tags": [ "Models" ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "Id of selected user",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all models",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 200,
                    "data": [
                      {
                        "id": 1,
                        "modelLink": "Link of model"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Train gold standard model",
        "operationId": "TrainModel",
        "tags": [ "Models" ],
        "requestBody": {
          "description": "Pass keypoints to AI for training",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "userId": {
                    "type": "integer",
                    "required": true
                  },
                  "scenarioId": {
                    "type": "integer",
                    "required": true
                  }
                },
                "example": {
                  "userId": 2019838809,
                  "scenarioId" : 1
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Signed URl created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "User not created because of validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/scenarios": {
      "get": {
        "summary": "List all Gold Scenarios",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "ListScenarios",
        "tags": [ "Scenarios" ],
        "responses": {
          "200": {
            "description": "List of all gold scenarios",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 200,
                    "data": [
                      {
                        "id": 1,
                        "scenario": "Forehand forward"
                      },
                      {
                        "id": 2,
                        "scenario": "Forehand to the side"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add new gold scenario",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "CreateScenario",
        "tags": [ "Scenarios" ],
        "requestBody": {
          "description": "Add new scenario",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "movement": {
                    "type": "string",
                    "required": true
                  },
                  "shotType": {
                    "type": "string",
                    "required": true
                  }
                },
                "example": {
                  "shotType": "Forehand",
                  "movement" : "forward"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/scenarios/{id}/keypoints": {
      "get": {
        "summary": "List all person keypoints based on gold scenario",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "ListPersonKeypoints",
        "tags": [ "Scenarios" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of selected gold scenario",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Id of selected user",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all person keypoints",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 200,
                    "data": [
                      {
                        "id": 1,
                        "scenario": "Forehand forward"
                      },
                      {
                        "id": 2,
                        "scenario": "Forehand to the side"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/analytics/match": {
      "get": {
        "summary": "Display match analytics",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "MatchReport",
        "tags": [ "Analytics" ],
        "parameters": [
          {
            "name": "videoId",
            "in": "query",
            "description": "Id of selected video/match",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "hitSpot",
            "in": "query",
            "description": "Possible Values : behind baseline, inside baseline, inside service line",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "errorType",
            "in": "query",
            "description": "Possible Values : into net, long, wide",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "shotDirection",
            "in": "query",
            "description": "Possible Values : cross-court, down-the-line, inside-out",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "shotType",
            "in": "query",
            "description": "Possible Values : forehand, backhand, volley, overhead",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Match analytics",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 200,
                    "data": [
                      {
                        "id": 1,
                        "modelLink": "Link of model"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/analytics/progress": {
      "get": {
        "summary": "Display progress report",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "ProgressReport",
        "tags": [ "Analytics" ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "Id of selected user",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "hitSpot",
            "in": "query",
            "description": "Possible Values : behind baseline, inside baseline, inside service line",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "errorType",
            "in": "query",
            "description": "Possible Values : into net, long, wide",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "shotDirection",
            "in": "query",
            "description": "Possible Values : cross-court, down-the-line, inside-out",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "shotType",
            "in": "query",
            "description": "Possible Values : forehand, backhand, volley, overhead",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Progress Report",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 200,
                    "data": [
                      {
                        "id": 1,
                        "modelLink": "Link of model"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clips/keypoint/list": {
      "get": {
        "summary": "List all keypoints",
        "operationId": "ListKeypoints",
        "tags": [ "Keypoints" ],
        "responses": {
          "200": {
            "description": "List all keypoints",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 200,
                    "data": [
                      {
                        "id": 1,
                        "clipId": 3,
                        "clipPath": "https://tennis-trainer-dev-media.s3.ap-southeast-1.amazonaws.com/keypoints/dev/2019-10-08/3/1570505591485.json",
                        "createdAt": "2019-10-08T03:33:11.507Z",
                        "updatedAt": "2019-10-08T03:33:11.507Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clips/keypoint": {
      "get": {
        "summary": "Get path where keypoint is uploaded",
        "operationId": "GetKeypoint",
        "tags": [ "Keypoints" ],
        "parameters": [
          {
            "name": "clipId",
            "in": "query",
            "description": "Id of clip to filter",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Generate signed URL for keypoints",
        "operationId": "KeypointSignedURL",
        "tags": [ "Keypoints" ],
        "requestBody": {
          "description": "Generate Signed URL",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "clipId": {
                    "type": "integer",
                    "required": true
                  }
                },
                "example": {
                  "clipId": 2
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Signed URl created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "User not created because of validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/ValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "defaultResponses": {
    "ValidationError": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [ "ValidationError" ]
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/defaultResponses/ValidationErrorDetail"
          }
        }
      }
    },
    "ValidationErrorDetail": {
      "properties": {
        "message": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "NotFoundError": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [ "NotFoundError" ]
        },
        "details": {
          "type": "string",
          "enum": [ "User with id {id} not found" ]
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "in": "header",
        "description": "idToken from login"
      }
    },
    "schemas": {
      "User": {
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique Identifier representing a user",
            "x-primary-key": true
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Project": {
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique Identifier representing a project",
            "x-primary-key": true
          },
          "name": {
            "type": "string"
          }
        }
      }
    }
  }
}
